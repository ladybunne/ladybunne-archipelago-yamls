general_options:
  # Where to place output files
  output_path: "output"
# Options for MultiServer
# Null means nothing, for the server this means to default the value
# These overwrite command line arguments!
server_options:
  host: null
  port: 38281
  password: null
  multidata: null
  savefile: null
  disable_save: false
  loglevel: "info"
  # Allows for clients to log on and manage the server.  If this is null, no remote administration is possible.
  server_password: "randomisedrabbits"
  # Disallow !getitem
  disable_item_cheat: true
  # Client hint system
  # Points given to a player for each acquired item in their world
  location_check_points: 1
  # Relative point cost to receive a hint via !hint for players
  # so for example hint_cost: 20 would mean that for every 20% of available checks, you get the ability to hint,
  # for a total of 5
  hint_cost: 5
  # Release modes
  # A Release sends out the remaining items *from* a world that releases
  # "disabled" -> clients can't release,
  # "enabled" -> clients can always release
  # "auto" -> automatic release on goal completion
  # "auto-enabled" -> automatic release on goal completion and manual release is also enabled
  # "goal" -> release is allowed after goal completion
  release_mode: "auto"
  # Collect modes
  # A Collect sends the remaining items *to* a world that collects
  # "disabled" -> clients can't collect,
  # "enabled" -> clients can always collect
  # "auto" -> automatic collect on goal completion
  # "auto-enabled" -> automatic collect on goal completion and manual collect is also enabled
  # "goal" -> collect is allowed after goal completion
  collect_mode: "disabled"
  # Remaining modes
  # !remaining handling, that tells a client which items remain in their pool
  # "enabled" -> Client can always ask for remaining items
  # "disabled" -> Client can never ask for remaining items
  # "goal" -> Client can ask for remaining items after goal completion
  remaining_mode: "goal"
  # Automatically shut down the server after this many seconds without new location checks, 0 to keep running
  auto_shutdown: 0
  # Compatibility handling
  # 2 -> Recommended for casual/cooperative play, attempt to be compatible with everything across all versions
  # 1 -> No longer in use, kept reserved in case of future use
  # 0 -> Recommended for tournaments to force a level playing field, only allow an exact version match
  compatibility: 2
  # log all server traffic, mostly for dev use
  log_network: 0
# Options for Generation
generator:
  # Location of your Enemizer CLI, available here: https://github.com/Ijwu/Enemizer/releases
  enemizer_path: "EnemizerCLI/EnemizerCLI.Core"
  # Folder from which the player yaml files are pulled from
  player_files_path: "Players"
  # amount of players, 0 to infer from player files
  players: 0
  # general weights file, within the stated player_files_path location
  # gets used if players is higher than the amount of per-player files found to fill remaining slots
  weights_file_path: "weights.yaml"
  # Meta file name, within the stated player_files_path location
  meta_file_path: "meta.yaml"
  # Create a spoiler file
  # 0 -> None
  # 1 -> Spoiler without playthrough or paths to playthrough required items
  # 2 -> Spoiler with playthrough (viable solution to goals)
  # 3 -> Spoiler with playthrough and traversal paths towards items
  spoiler: 3
  # Create encrypted race roms and flag games as race mode
  race: 0
  # List of options that can be plando'd. Can be combined, for example "bosses, items"
  # Available options: bosses, items, texts, connections
  plando_options: "items, bosses, texts, connections"
  # What to do if the current item placements appear unsolvable.
  # raise -> Raise an exception and abort.
  # swap -> Attempt to fix it by swapping prior placements around. (Default)
  # start_inventory -> Move remaining items to start_inventory, generate additional filler items to fill locations.
  panic_method: "swap"
  glitch_triforce_room: 0
sni_options:
  # Set this to your SNI folder location if you want the MultiClient to attempt an auto start, does nothing if not found
  sni_path: "SNI"
  # Set this to false to never autostart a rom (such as after patching)
  # True for operating system default program
  # Alternatively, a path to a program to open the .sfc file with
  snes_rom_start: true
bizhawkclient_options:
  # The location of the EmuHawk you want to auto launch patched ROMs with
  emuhawk_path: "C:/Users/Ladybunne/Games/BizHawk/EmuHawk.exe"
  # Set this to true to autostart a patched ROM in BizHawk with the connector script,
  # to false to never open the patched rom automatically,
  # or to a path to an external program to open the ROM file with that instead.
  rom_start: true
adventure_options:
  # File name of the standard NTSC Adventure rom.
  # The licensed "The 80 Classic Games" CD-ROM contains this.
  # It may also have a .a26 extension
  rom_file: "ADVNTURE.BIN"
  # Set this to false to never autostart a rom (such as after patching)
  # True for operating system default program for '.a26'
  # Alternatively, a path to a program to open the .a26 file with (generally EmuHawk for multiworld)
  rom_start: true
  # Optional, additional args passed into rom_start before the .bin file
  # For example, this can be used to autoload the connector script in BizHawk
  # (see BizHawk --lua= option)
  # Windows example:
  # rom_args: "--lua=C:/ProgramData/Archipelago/data/lua/connector_adventure.lua"
  rom_args: " "
  # Set this to true to display item received messages in EmuHawk
  display_msgs: true
albw_settings:
  # File name of your decrypted North American A Link Between Worlds ROM
  rom_file: "Legend of Zelda, The - A Link Between Worlds (USA) (En,Fr,Es).3ds"
animal_well_settings:
  # Choose the mode for the in-game tracker.
  # 0 -> Disable the in-game tracker.
  # 1 -> Only show checked locations, hide all others.
  # 2 -> Show the in-game tracker with no logic.
  # 3 -> Full in-game tracker, including logic.
  in_game_tracker: 3
cave_story_settings:
  game_exe: "Doukutsu.exe"
cv64_options:
  # File name of the CV64 US 1.0 rom
  rom_file: "Castlevania (USA).z64"
cvcotm_options:
  # File name of the Castlevania CotM US rom
  rom_file: "Castlevania - Circle of the Moon (USA).gba"
dkc3_options:
  # File name of the DKC3 US rom
  rom_file: "Donkey Kong Country 3 - Dixie Kong's Double Trouble! (USA) (En,Fr).sfc"
earthbound_options:
  # File name of the EarthBound US ROM
  rom_file: "EarthBound.sfc"
factorio_options:
  executable: "factorio/bin/x64/factorio"
  # by default, no settings are loaded if this file does not exist. If this file does exist, then it will be used.
  # server_settings: "factorio\\data\\server-settings.json"
  server_settings: null
  # Whether to filter item send messages displayed in-game to only those that involve you.
  filter_item_sends: false
  # Whether to send chat messages from players on the Factorio server to Archipelago.
  bridge_chat_out: true
ff4fe_options:
  # File name of the MLSS US rom
  rom_file: "Final Fantasy II (USA) (Rev A).sfc"
  rom_start: true
ffr_options:
  display_msgs: true
ffta_options:
  rom_file: "Final Fantasy Tactics Advance (USA).gba"
hades_options:
  # Path to the StyxScribe install
  styx_scribe_path: "C:/Program Files/Steam/steamapps/common/Hades/StyxScribe.py"
jakanddaxter_options:
  # Path to folder containing the ArchipelaGOAL mod executables (gk.exe and goalc.exe).
  root_directory: "D:/Files/Repositories/ArchipelaGOAL/out/build/Release/bin"
kdl3_options:
  # File name of the KDL3 JP or EN rom
  rom_file: "Kirby's Dream Land 3.sfc"
ladx_options:
  # File name of the Link's Awakening DX rom
  rom_file: "Legend of Zelda, The - Link's Awakening DX (USA, Europe) (SGB Enhanced).gbc"
  # Set this to false to never autostart a rom (such as after patching)
  # true  for operating system default program
  # Alternatively, a path to a program to open the .gbc file with
  # Examples:
  # Retroarch:
  # rom_start: "C:/RetroArch-Win64/retroarch.exe -L sameboy"
  # BizHawk:
  # rom_start: "C:/BizHawk-2.9-win-x64/EmuHawk.exe --lua=data/lua/connector_ladx_bizhawk.lua"
  rom_start: true
lttp_options:
  # File name of the v1.0 J rom
  rom_file: "Zelda no Densetsu - Kamigami no Triforce (Japan).sfc"
lufia2ac_options:
  # File name of the US rom
  rom_file: "Lufia II - Rise of the Sinistrals (USA).sfc"
messenger_settings:
  game_path: "TheMessenger.exe"
metroidprime_options:
  # File name of the Metroid Prime ISO
  rom_file: "Metroid_Prime.iso"
  # Set this to false to never autostart a rom (such as after patching),
  # Set it to true to have the operating system default program open the iso
  # Alternatively, set it to a path to a program to open the .iso file with (like Dolplhin)
  rom_start: false
minecraft_options:
  forge_directory: "Minecraft Forge server"
  max_heap_size: "2G"
  # release channel, currently "release", or "beta"
  # any games played on the "beta" channel have a high likelihood of no longer working on the "release" channel.
  release_channel: "release"
mlss_options:
  # File name of the MLSS US rom
  rom_file: "Mario & Luigi - Superstar Saga (U).gba"
  rom_start: true
mm2_options:
  # File name of the MM2 EN rom
  rom_file: "Mega Man 2 (USA).nes"
mm3_options:
  # File name of the MM3 EN rom
  rom_file: "Mega Man 3 (USA).nes"
mmbn3_options:
  # File name of the MMBN3 Blue US rom
  rom_file: "Mega Man Battle Network 3 - Blue Version (USA).gba"
  rom_start: true
mmx3_options:
  # File name of the Mega Man X3 US ROM
  rom_file: "Mega Man X3 (USA).sfc"
mmx_options:
  # File name of the Mega Man X US ROM
  rom_file: "Mega Man X (USA).sfc"
mzm_options:
  # File name of the Metroid: Zero Mission ROM.
  rom_file: "Metroid - Zero Mission (USA).gba"
  # Set this to false to never autostart a rom (such as after patching),
  # Set it to true to have the operating system default program open the rom
  # Alternatively, set it to a path to a program to open the .gba file with
  rom_start: true
oot_options:
  # File name of the OoT v1.0 ROM
  rom_file: "The Legend of Zelda - Ocarina of Time.z64"
  # Set this to false to never autostart a rom (such as after patching),
  # true  for operating system default program
  # Alternatively, a path to a program to open the .z64 file with
  rom_start: true
paper_mario_settings:
  # File name of the Paper Mario USA ROM
  rom_file: "Paper Mario (USA).z64"
  # Set this to false to never autostart a rom (such as after patching),
  # true  for operating system default program
  # Alternatively, a path to a program to open the .z64 file with
  rom_start: true
pokemon_crystal_settings:
  rom_file: "Pokemon - Crystal Version (UE) (V1.0) [C][!].gbc"
  rom_start: true
pokemon_emerald_settings:
  # File name of your English Pokemon Emerald ROM
  rom_file: "Pokemon - Emerald Version (USA, Europe).gba"
pokemon_frlg_settings:
  # File name of your English Pokémon FireRed ROM
  firered_rom_file: "Pokemon - FireRed Version (USA, Europe).gba"
  # File name of your English Pokémon LeafGreen ROM
  leafgreen_rom_file: "Pokemon - LeafGreen Version (USA, Europe).gba"
pokemon_rb_options:
  # File names of the Pokemon Red and Blue roms
  red_rom_file: "Pokemon Red (UE) [S][!].gb"
  blue_rom_file: "Pokemon Blue (UE) [S][!].gb"
psychonauts_options:
  # Locate the Psychonauts root directory on your system.
  # This is used by the Psychonauts client, so it knows where to send communication files to
  root_directory: "C:\\\\Program Files (x86)\\\\Steam\\\\steamapps\\\\common\\\\Psychonauts"
rabi_ribi_options:
  game_installation_path: "C:/Program Files (x86)/Steam/steamapps/common/Rabi-Ribi"
sm_options:
  # File name of the v1.0 J rom
  rom_file: "Super Metroid (JU).sfc"
sml2_options:
  # File name of the Super Mario Land 2 1.0 ROM
  rom_file: "Super Mario Land 2 - 6 Golden Coins (USA, Europe).gb"
smw_options:
  # File name of the SMW US rom
  rom_file: "Super Mario World (USA).sfc"
soe_options:
  # File name of the SoE US ROM
  rom_file: "Secret of Evermore (USA).sfc"
tloz_oos_options:
  # File name of the Oracle of Seasons US ROM
  rom_file: "Legend of Zelda, The - Oracle of Seasons (USA).gbc"
  rom_start: true
  # The name of the sprite file to use (from "data/sprites/oos_ooa/").
  # Putting "link" as a value uses the default game sprite.
  # Putting "random" as a value randomly picks a sprite from your sprites directory for each generated ROM.
  character_sprite: "link"
  # The color palette used for character sprite throughout the game.
  # Valid values are: "green", "red", "blue", "orange", and "random"
  character_palette: "green"
  # If enabled, hidden digging spots in Subrosia are revealed as diggable tiles.
  reveal_hidden_subrosia_digging_spots: true
  # A factor applied to the infamous heart beep sound interval.
  # Valid values are: "vanilla", "half", "quarter", "disabled"
  heart_beep_interval: "vanilla"
  # If true, no music will be played in the game while sound effects remain untouched
  remove_music: false
tloz_options:
  # File name of the Zelda 1
  rom_file: "Legend of Zelda, The (U) (PRG0) [!].nes"
  # Set this to false to never autostart a rom (such as after patching)
  # true  for operating system default program
  # Alternatively, a path to a program to open the .nes file with
  rom_start: true
  # Display message inside of Bizhawk
  display_msgs: false
universal_tracker:
  player_files_path: "C:/Users/Ladybunne/Games/Archipelago/UT"
  include_region_name: true
  include_location_name: true
  hide_excluded_locations: true
wargroove_options:
  # Locate the Wargroove root directory on your system.
  # This is used by the Wargroove client, so it knows where to send communication files to
  root_directory: "C:/Program Files (x86)/Steam/steamapps/common/Wargroove"
wl4_options:
  # File name of the Wario Land 4 ROM
  rom_file: "Wario Land 4.gba"
  rom_start: true
yoshisisland_options:
  # File name of the Yoshi's Island 1.0 US rom
  rom_file: "Super Mario World 2 - Yoshi's Island (U).sfc"
yugioh06_settings:
  # File name of your Yu-Gi-Oh 2006 ROM
  rom_file: "YuGiOh06.gba"
zillion_options:
  # File name of the Zillion US rom
  rom_file: "Zillion (UE) [!].sms"
  # Set this to false to never autostart a rom (such as after patching)
  # True for operating system default program
  # Alternatively, a path to a program to open the .sfc file with
  # RetroArch doesn't make it easy to launch a game from the command line.
  # You have to know the path to the emulator core library on the user's computer.
  rom_start: "retroarch"
