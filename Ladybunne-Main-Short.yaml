#          ((`\          -------------------
#       ___ \\ '--._    / hippity hoppity /
#    .'`   `'    o  )  /   ur checks r   /
#   /    \   '. __.'  /   my property   /
#  _|    /_  \ \_\_  -------------------
# {_\______\-'\__\_\                    

description: Ladybunne's main weighted yaml for Archipelago short syncs

name: Ladybunne{NUMBER}
game: 
  # The Legend of Zelda: 2
  # Slay the Spire: 1
  # Risk of Rain 2: 1
  Kingdom Hearts 2: 7
  # A Link to the Past: 1
  # Hollow Knight: 2

requires:
  version: 0.4.6
  plando: items



# The Legend of Zelda

The Legend of Zelda:

  # Trying this out.
  local_items:
    - Stepladder

  # Danger is fun!
  StartingPosition: very_dangerous

  plando_items:
    # Put Book of Magic and the boomerangs in the bad corner where it belongs.
    # Ideally I force it to something like L9 Wizzrobes East Island, which you would
    # normally never visit... but because a random 50% of L9 is junked by the
    # generator, I need to provide a list of at least 50% + 1 checks.
    - items:
        - Book of Magic
        - Boomerang
        - Magical Boomerang
      locations:
        - Level 9 Item (Silver Arrow)
        - Level 9 Item (Red Ring)
        - Level 9 Map
        - Level 9 Compass
        - Level 9 Key Drop (Wizzrobes and Bubbles East)
        - Level 9 Key Drop (Wizzrobes East Island)
        - Level 9 Bomb Drop (Blue Lanmolas)
        - Level 9 Bomb Drop (Gels Lake)
        - Level 9 Bomb Drop (Like Likes and Zols Corridor)
        - Level 9 Bomb Drop (Vires)
        - Level 9 Rupee Drop (Wizzrobes West Island)
        - Level 9 Rupee Drop (Red Lanmolas)
        - Level 9 Rupee Drop (Keese Central Island)
        - Level 9 Rupee Drop (Wizzrobes Central)
        - Level 9 Rupee Drop (Gels East)
      from_pool: true
      world: false



# Slay the Spire

Slay the Spire:

  start_hints:
    - Boss Relic

  # Trying this out. Should be fun.
  priority_locations: 
    [
      "Boss Relic 1", "Boss Relic 2",
      "Card Draw 4", "Card Draw 5", "Card Draw 6",
      "Card Draw 7", "Card Draw 8", "Card Draw 9",
      "Card Draw 10", "Card Draw 11", "Card Draw 12", 
      "Rare Card Draw 1", "Rare Card Draw 2",
      "Relic 1", "Relic 2", "Relic 3", "Relic 4", "Relic 5",
    ]

  character:
    the_ironclad: 1
    the_silent: 2
    the_defect: 1
    the_watcher: 0
  
  # low% + high ascension = bad times, so we do Ascension 0.
  ascension: 0

  # Same deal.
  final_act: false



# Risk of Rain 2

Risk of Rain 2:

  # Force these locations to be junk. The main reason to do this is twofold: 
  # - It lets RoR2 hoover up bad items for other players.
  # - It excludes late chest checks (since they take a long time), without 
  #   shrinking the amount of items RoR2 adds to the pool.
  exclude_locations:
    [
      "ItemPickup51", "ItemPickup52", "ItemPickup53", "ItemPickup54", "ItemPickup55",
      "ItemPickup56", "ItemPickup57", "ItemPickup58", "ItemPickup59", "ItemPickup60",
      "ItemPickup61", "ItemPickup62", "ItemPickup63", "ItemPickup64", "ItemPickup65",
      "ItemPickup66", "ItemPickup67", "ItemPickup68", "ItemPickup69", "ItemPickup70",
      "ItemPickup71", "ItemPickup72", "ItemPickup73", "ItemPickup74", "ItemPickup75",
      "ItemPickup76", "ItemPickup77", "ItemPickup78", "ItemPickup79", "ItemPickup80",
      "ItemPickup81", "ItemPickup82", "ItemPickup83", "ItemPickup84", "ItemPickup85",
      "ItemPickup86", "ItemPickup87", "ItemPickup88", "ItemPickup89", "ItemPickup90",
      "ItemPickup91", "ItemPickup92", "ItemPickup93", "ItemPickup94", "ItemPickup95",
      "ItemPickup96", "ItemPickup97", "ItemPickup98", "ItemPickup99", "ItemPickup100",
    ]

  non_local_items:
    - Uncommon Item
    - Legendary Item
    - Boss Item
    - Money
    - 1000 Exp

  # Start with these locations and their item prefilled into the !hint command
  start_hints:
    - Legendary Item
    - Boss Item

  dlc_sotv: true

  # I think randomising victory is fun, but for the sake of shorts, best to
  # keep it to any. Final stage death stays off though. Git gud.
  victory: any
  final_stage_death: false

  # In my experience, Explore ends up being *very* time-consuming.
  # My hopes with Classic is to capture the joy of Risk of Rain 2,
  # without all the hassle of frequent and tedious BK chains that Explore
  # tends to bring.
  goal: classic

  # I'm super mixed on this.
  # - Every chest is obviously terrible, it breaks the game.
  # - Every second feels like it eats a lot of your items.
  # - Every third is... weird. You send less checks but you do actually get to play
  #   the game.
  item_pickup_step: 2

  # Who needs 'em? (Maybe me. We'll see.)
  start_with_revive: false

  # I'm trying a new thing where I have an exact, perfect distribution of
  # each item type, summing to the total locations count. This will allow
  # full flexibility in controlling the item pool.
  # Range is 40-250.
  total_locations: 100

  # Use my own custom weights.
  item_pool_presets: false

  # Items.
  common_item: 40
  uncommon_item: 20
  legendary_item: 5
  boss_item: 5

  # Scrap.
  white_scrap: 15
  green_scrap: 5
  red_scrap: 0
  yellow_scrap: 0

  # Consumables.
  money: 5
  experience: 5

  # Don't want random equipment from other players.
  equipment: 0

  # Lunars and void items are both terrible to receive randomly.
  enable_lunar: false
  lunar_item: 0
  void_item: 0
  lunar_coin: 0

  # Dio's? No thanks.
  total_revivals: 0

  # Also not a fan of traps.
  enable_trap: false
  mountain_trap: 0
  time_warp_trap: 0
  combat_trap: 0
  teleport_trap: 0



# Kingdom Hearts 2

Kingdom Hearts 2:

  # Emblems is a bit harder, but I still like proofs.
  Goal:
    three_proofs: 1
    lucky_emblem_hunt: 2

  # Nowadays, we are gaming.
  FinalXemnas: true

  # Range: 1 to 60
  LuckyEmblemsRequired: 35
  LuckyEmblemsAmount: 50

  Promise_Charm: true
  
  exclude_locations:
    - Transport to Remembrance

  RandomVisitLockingItem: random-range-1-4

  # Checks on levels kinda suck, tbh.
  LevelDepth: level_1

  start_inventory:
    Scan: 1
    Aerial Recovery: 1
    Draw: 1

  Sora_Level_EXP: 6

  Valor_Form_EXP: 8
  Wisdom_Form_EXP: 3
  Limit_Form_EXP: 3
  Master_Form_EXP: 3
  Final_Form_EXP: 3

  Summon_EXP: 10

  Schmovement: level_1

  Keyblade_Minimum: 3
  Keyblade_Maximum: 10

  # Options: easy, normal, hard
  FightLogic: normal

  # Toggle Summon levels to have locations.
  SummonLevelLocationToggle: true

  CorSkipToggle: true
  SuperBosses: false



# A Link to the Past

A Link to the Past:

  # Normal stuff.
  goal: ganon
  mode: open

  # GT sucks.
  open_pyramid: open

  crystals_needed_for_gt: 4
  crystals_needed_for_ganon: 4

  start_inventory_from_pool:
    Pegasus Boots: 1

  shuffle_capacity_upgrades: on
  
  map_shuffle: start_with
  compass_shuffle: start_with

  scams: all
  killable_thieves: true



# Hollow Knight

Hollow Knight:
  progression_balancing: 20
  accessibility: items

  # Allow for Dreamers to be randomized into the item pool and opens their locations for randomization.
  RandomizeDreamers: true

  # Allow for Skills, such as Mantis Claw or Shade Soul, to be randomized into the item pool. Also opens their locations
  # for receiving randomized items.
  RandomizeSkills: true

  # Removes the ability to focus and randomizes it into the item pool.
  RandomizeFocus: false

  # Removes the ability to swim in water and randomizes it into the item pool.
  RandomizeSwim: false

  RandomizeCharms:
    # Allow for Charms to be randomized into the item pool and open their locations for randomization. Includes Charms
    # sold in shops.
    false: 0
    true: 50

  RandomizeKeys:
    # Allow for Keys to be randomized into the item pool. Includes those sold in shops.
    false: 0
    true: 50

  RandomizeMaskShards:
    # Allow for Mask Shard to be randomized into the item pool and open their locations for randomization.
    false: 0
    true: 50

  RandomizeVesselFragments:
    # Allow for Vessel Fragments to be randomized into the item pool and open their locations for randomization.
    false: 0
    true: 50

  RandomizeCharmNotches:
    # Allow for Charm Notches to be randomized into the item pool. Includes those sold by Salubra.
    false: 0
    true: 50

  RandomizePaleOre:
    # Randomize Pale Ores into the item pool and open their locations for randomization.
    false: 0
    true: 50

  RandomizeGeoChests:
    # Allow for Geo Chests to contain randomized items, as well as their Geo reward being randomized into the item pool.
    false: 50
    true: 0

  RandomizeJunkPitChests:
    # Randomize the contents of junk pit chests into the item pool and open their locations for randomization.
    false: 50
    true: 0

  RandomizeRancidEggs:
    # Randomize Rancid Eggs into the item pool and open their locations for randomization
    false: 50
    true: 0

  # Randomize Relics (King's Idol, et al.) into the item pool and open their locations for randomization.
  RandomizeRelics: true

  RandomizeWhisperingRoots:
    # Randomize the essence rewards from Whispering Roots into the item pool. Whispering Roots will now grant a randomized
    # item when completed. This can be previewed by standing on the root.
    false: 50
    true: 0

  RandomizeBossEssence:
    # Randomize boss essence drops, such as those for defeating Warrior Dreams, into the item pool and open their locations
    # for randomization.
    false: 50
    true: 0

  # Randomize Grubs into the item pool and open their locations for randomization.
  RandomizeGrubs: true

  RandomizeMimics:
    # Randomize Mimic Grubs into the item pool and open their locations for randomization.
    false: 50
    true: 0

  RandomizeMaps:
    # Randomize Maps into the item pool. This causes Cornifer to give you a message allowing you to see and buy an item
    # that is randomized into that location as well.
    false: 50
    true: 0

  RandomizeStags:
    # Randomize Stag Stations unlocks into the item pool as well as placing randomized items on the stag station bell/toll.
    false: 0
    true: 50

  RandomizeLifebloodCocoons:
    # Randomize Lifeblood Cocoon grants into the item pool and open their locations for randomization.
    false: 0
    true: 50

  RandomizeGrimmkinFlames:
    # Randomize Grimmkin Flames into the item pool and open their locations for randomization.
    false: 50
    true: 0

  RandomizeJournalEntries:
    # Randomize the Hunter's Journal as well as the findable journal entries into the item pool, and open their locations
    # for randomization. Does not include journal entries gained by killing enemies.
    false: 50
    true: 0

  RandomizeNail:
    # Removes the ability to swing the nail left, right and up, and shuffles these into the item pool.
    false: 50
    true: 0

  RandomizeGeoRocks:
    # Randomize Geo Rock rewards into the item pool and open their locations for randomization.
    false: 50
    true: 0

  # Randomize boss Geo drops into the item pool and open those locations for randomization.
  RandomizeBossGeo: true

  RandomizeSoulTotems:
    # Randomize Soul Refill items into the item pool and open the Soul Totem locations for randomization.
    false: 50
    true: 0

  RandomizeLoreTablets:
    # Randomize Lore items into the itempool, one per Lore Tablet, and place randomized item grants on the tablets themselves.
    # You must still read the tablet to get the item.
    false: 50
    true: 0

  RandomizeElevatorPass:
    # Adds an Elevator Pass item to the item pool, which is then required to use the large elevators connecting
    # City of Tears to the Forgotten Crossroads and Resting Grounds.
    false: 50
    true: 0

  PreciseMovement:
    # Places skips into logic which require extremely precise player movement, possibly without movement skills such as
    # dash or hook.
    false: 50
    true: 0

  ProficientCombat:
    # Places skips into logic which require proficient combat, possibly with limited items.
    false: 50
    true: 0

  BackgroundObjectPogos:
    # Places skips into logic for locations which are reachable via pogoing off of background objects.
    false: 50
    true: 0

  EnemyPogos:
    # Places skips into logic for locations which are reachable via pogos off of enemies.
    false: 50
    true: 0

  ObscureSkips:
    # Places skips into logic which are considered obscure enough that a beginner is not expected to know them.
    false: 50
    true: 0

  ShadeSkips:
    # Places shade skips into logic which utilize the player's shade for pogoing or damage boosting.
    false: 50
    true: 0

  InfectionSkips:
    # Places skips into logic which are only possible after the crossroads become infected.
    false: 50
    true: 0

  FireballSkips:
    # Places skips into logic which require the use of spells to reset fall speed while in mid-air.
    false: 50
    true: 0

  SpikeTunnels:
    # Places skips into logic which require the navigation of narrow tunnels filled with spikes.
    false: 50
    true: 0

  AcidSkips:
    # Places skips into logic which require crossing a pool of acid without Isma's Tear, or water if swim is disabled.
    false: 50
    true: 0

  DamageBoosts:
    # Places skips into logic which require you to take damage from an enemy or hazard to progress.
    false: 50
    true: 0

  DangerousSkips:
    # Places skips into logic which contain a high risk of taking damage.
    false: 50
    true: 0

  DarkRooms:
    # Places skips into logic which require navigating dark rooms without the use of the Lumafly Lantern.
    false: 50
    true: 0

  ComplexSkips:
    # Places skips into logic which require intense setup or are obscure even beyond advanced skip standards.
    false: 50
    true: 0

  DifficultSkips:
    # Places skips into logic which are considered more difficult than typical.
    false: 50
    true: 0

  RemoveSpellUpgrades:
    # Removes the second level of all spells from the item pool.
    false: 50
    true: 0

  StartLocation:
    # Choose your start location. This is currently only locked to King's Pass.
    king's_pass: 50

  Goal:
    # The goal required of you in order to complete your run in Archipelago.
    any: 50
    hollowknight: 0
    siblings: 0
    radiance: 0

  WhitePalace:
    # Whether or not to include White Palace or not.  Note: Even if excluded, the King Fragment check may still be
    # required if charms are vanilla.
    exclude: 50
    kingfragment: 0
    nopathofpain: 0
    include: 0

  ExtraPlatforms:
    # Places additional platforms to make traveling throughout Hallownest more convenient.
    false: 0
    true: 50

  AddUnshuffledLocations:
    # Adds non-randomized locations to the location pool, which allows syncing
    # of location state with co-op or automatic collection via collect.
    # 
    # Note: This will increase the number of location checks required to purchase
    # hints to the total maximum.
    false: 50
    true: 0

  StartingGeo:
    # The amount of starting geo you have.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 1000
    0: 50
    random: 0
    random-low: 0
    random-high: 0

  DeathLink:
    # When you die, everyone dies. Of course the reverse is true too.
    false: 50
    true: 0

  DeathLinkShade:
    # Sets whether to create a shade when you are killed by a DeathLink and how to handle your existing shade, if any.
    # 
    # vanilla: DeathLink deaths function like any other death and overrides your existing shade (including geo), if any.
    # shadeless: DeathLink deaths do not spawn shades. Your existing shade (including geo), if any, is untouched.
    # shade: DeathLink deaths spawn a shade if you do not have an existing shade. Otherwise, it acts like shadeless.
    # 
    # * This option has no effect if DeathLink is disabled.
    # ** Self-death shade behavior is not changed; if a self-death normally creates a shade in vanilla, it will override
    #     your existing shade, if any.
    vanilla: 0
    shadeless: 0
    shade: 50

  DeathLinkBreaksFragileCharms:
    # Sets if fragile charms break when you are killed by a DeathLink.
    # 
    # * This option has no effect if DeathLink is disabled.
    # ** Self-death fragile charm behavior is not changed; if a self-death normally breaks fragile charms in vanilla, it
    #     will continue to do so.
    false: 50
    true: 0

  MinimumGeoPrice:
    # The minimum geo price for items in geo shops.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 1
    # Maximum value is 200
    1: 50
    random: 0
    random-low: 0
    random-high: 0

  MaximumGeoPrice:
    # The maximum geo price for items in geo shops.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 1
    # Maximum value is 2000
    400: 50
    random: 0
    random-low: 0
    random-high: 0

  MinimumGrubPrice:
    # The minimum grub price in the range of prices that an item should cost from Grubfather.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 1
    # Maximum value is 46
    1: 50
    random: 0
    random-low: 0
    random-high: 0

  MaximumGrubPrice:
    # The maximum grub price in the range of prices that an item should cost from Grubfather.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 1
    # Maximum value is 46
    23: 50
    random: 0
    random-low: 0
    random-high: 0

  MinimumEssencePrice:
    # The minimum essence price in the range of prices that an item should cost from Seer.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 1
    # Maximum value is 2800
    1: 50
    random: 0
    random-low: 0
    random-high: 0

  MaximumEssencePrice:
    # The maximum essence price in the range of prices that an item should cost from Seer.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 1
    # Maximum value is 2800
    1400: 50
    random: 0
    random-low: 0
    random-high: 0

  MinimumCharmPrice:
    # The minimum charm price in the range of prices that an item should cost for Salubra's shop item which also
    # carry a charm cost.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 1
    # Maximum value is 40
    1: 50
    random: 0
    random-low: 0
    random-high: 0

  MaximumCharmPrice:
    # The maximum charm price in the range of prices that an item should cost for Salubra's shop item which also
    # carry a charm cost.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 1
    # Maximum value is 40
    20: 50
    random: 0
    random-low: 0
    random-high: 0

  RandomCharmCosts:
    # Total Notch Cost of all Charms together. Vanilla sums to 90.
    # This value is distributed among all charms in a random fashion.
    # Special Cases:
    # Set to -1 or vanilla for vanilla costs.
    # Set to -2 or shuffle to shuffle around the vanilla costs to different charms.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 240
    random: 0
    random-low: 0
    random-high: 0
    vanilla: 50 # equivalent to -1
    shuffle: 0 # equivalent to -2

  PlandoCharmCosts:
    # Allows setting a Charm's Notch costs directly, mapping {name: cost}.
    # This is set after any random Charm Notch costs, if applicable.
    {}

  MinimumEggPrice:
    # The minimum rancid egg price in the range of prices that an item should cost from Jiji.
    # Only takes effect if the EggSlotShops option is greater than 0.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 1
    # Maximum value is 21
    1: 50
    random: 0
    random-low: 0
    random-high: 0

  MaximumEggPrice:
    # The maximum rancid egg price in the range of prices that an item should cost from Jiji.
    # Only takes effect if the EggSlotShops option is greater than 0.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 1
    # Maximum value is 21
    10: 50
    random: 0
    random-low: 0
    random-high: 0

  EggShopSlots:
    # For each slot, add a location to the Egg Shop and a filler item to the item pool.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 16
    0: 50
    random: 0
    random-low: 0
    random-high: 0

  SlyShopSlots:
    # For each extra slot, add a location to the Sly Shop and a filler item to the item pool.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 16
    8: 50
    random: 0
    random-low: 0
    random-high: 0

  SlyKeyShopSlots:
    # For each extra slot, add a location to the Sly Shop (requiring Shopkeeper's Key) and a filler item to the item
    # pool.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 16
    6: 50
    random: 0
    random-low: 0
    random-high: 0

  IseldaShopSlots:
    # For each extra slot, add a location to the Iselda Shop and a filler item to the item pool.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 16
    2: 50
    random: 0
    random-low: 0
    random-high: 0

  SalubraShopSlots:
    # For each extra slot, add a location to the Salubra Shop, and a filler item to the item pool.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 16
    5: 50
    random: 0
    random-low: 0
    random-high: 0

  SalubraCharmShopSlots:
    # For each extra slot, add a location to the Salubra Shop (requiring Charms), and a filler item to the item
    # pool.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 16
    5: 50
    random: 0
    random-low: 0
    random-high: 0

  LegEaterShopSlots:
    # For each extra slot, add a location to the Leg Eater Shop and a filler item to the item pool.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 16
    3: 50
    random: 0
    random-low: 0
    random-high: 0

  GrubfatherRewardSlots:
    # For each extra slot, add a location to the Grubfather and a filler item to the item pool.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 16
    7: 50
    random: 0
    random-low: 0
    random-high: 0

  SeerRewardSlots:
    # For each extra slot, add a location to the Seer and a filler item to the item pool.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 16
    8: 50
    random: 0
    random-low: 0
    random-high: 0

  ExtraShopSlots:
    # For each extra slot, add a location to a randomly chosen shop a filler item to the item pool.
    # 
    # The Egg Shop will be excluded from this list unless it has at least one item.
    # 
    # Shops are capped at 16 items each.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 144
    0: 50
    random: 0
    random-low: 0
    random-high: 0

  SplitCrystalHeart:
    # Splits the Crystal Heart into left- and right-only versions of the item.
    false: 50
    true: 0

  SplitMothwingCloak:
    # Splits the Mothwing Cloak into left- and right-only versions of the item. Randomly adds a second left or
    # right Mothwing cloak item which functions as the upgrade to Shade Cloak.
    false: 50
    true: 0

  SplitMantisClaw:
    # Splits the Mantis Claw into left- and right-only versions of the item.
    false: 50
    true: 0

  CostSanity:
    # If enabled, most locations with costs (like stag stations) will have randomly determined costs.
    # If set to shopsonly, CostSanity will only apply to shops (including Grubfather, Seer and Egg Shop).
    # If set to notshops, CostSanity will only apply to non-shops (e.g. Stag stations and Cornifer locations)
    # 
    # These costs can be in Geo (except Grubfather, Seer and Eggshop), Grubs, Charms, Essence and/or Rancid Eggs
    off: 50
    on: 0
    shopsonly: 0
    notshops: 0

  CostSanityHybridChance:
    # The chance that a CostSanity cost will include two components instead of one, e.g. Grubs + Essence
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 100
    10: 50
    random: 0
    random-low: 0
    random-high: 0

  CostSanityEggWeight:
    # The likelihood of Costsanity choosing a Egg cost. Chosen as a sum of all weights from other types.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 1000
    1: 50
    random: 0
    random-low: 0
    random-high: 0

  CostSanityGrubWeight:
    # The likelihood of Costsanity choosing a Grub cost. Chosen as a sum of all weights from other types.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 1000
    1: 50
    random: 0
    random-low: 0
    random-high: 0

  CostSanityEssenceWeight:
    # The likelihood of Costsanity choosing a Essence cost. Chosen as a sum of all weights from other types.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 1000
    1: 50
    random: 0
    random-low: 0
    random-high: 0

  CostSanityCharmWeight:
    # The likelihood of Costsanity choosing a Charm cost. Chosen as a sum of all weights from other types.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 1000
    1: 50
    random: 0
    random-low: 0
    random-high: 0

  CostSanityGeoWeight:
    # The likelihood of Costsanity choosing a Geo cost. Chosen as a sum of all weights from other types.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 1000
    8: 50
    random: 0
    random-low: 0
    random-high: 0
